{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Scheduler",
    "description" : "The Scheduler APIs let you programmatically interact with [Zoom Scheduler](https://developers.zoom.us/docs/zoom-scheduler/) features. They allow you to schedule, manage, and retrieve details about meetings, webinars, and other events on the Zoom platform. With powerful tools for integration, these APIs streamline event management and automate workflows in external applications.",
    "termsOfService" : "https://zoom.us/docs/en-us/zoom_api_license_and_tou.html",
    "contact" : {
      "name" : "Zoom Developers",
      "url" : "https://developer.zoom.us/"
    },
    "version" : "2"
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "https://swagger.io"
  },
  "servers" : [ {
    "url" : "https://api.zoom.us/v2"
  } ],
  "paths" : {
    "/scheduler/analytics" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Report analytics",
        "description" : "Generates the scheduler analytics report.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read`,`scheduler:read:admin`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:analytics`,`scheduler:read:analytics:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "report_analytics",
        "parameters" : [ {
          "name" : "to",
          "in" : "query",
          "description" : "The upper bound (exclusive) for an event's start time to filter by. Optional. The default is not to filter by start time. It must be an RFC3339 timestamp with mandatory time zone offset. For example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If `timeMin` is set, `timeMax` must be greater than `timeMin`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2024-02-01T00:00:00Z"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The lower bound (exclusive) for an event's end time from which to filter. Optional. The default is not to filter by end time. It must be an RFC3339 timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00, 2011-06-03T10:00:00Z. Milliseconds can be provided but are ignored. If `timeMax` is set, `timeMin` must be smaller than `timeMax`.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2024-01-01T00:00:00Z"
          }
        }, {
          "name" : "time_zone",
          "in" : "query",
          "description" : "The time zone in the response. The default is the time zone of the calendar. Optional. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "America/Los_Angeles"
          },
          "x-ballerina-name" : "timeZone"
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "The specific user's web user ID. Default is \"me\". Use \"all\" to query for analytics with respect to all members under that account. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80 or all"
          },
          "x-ballerina-name" : "userId"
        } ],
        "responses" : {
          "200" : {
            "description" : "If successful, this method returns the scheduler analytics or the user ID or account ID provided.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse200"
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n notFound <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read", "scheduler:read:admin", "scheduler:read:analytics", "scheduler:read:analytics:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read", "scheduler:read:admin" ],
          "x-granular-scopes" : [ "scheduler:read:analytics", "scheduler:read:analytics:admin" ]
        }
      }
    },
    "/scheduler/availability" : {
      "get" : {
        "tags" : [ "availability" ],
        "summary" : "List availability",
        "description" : "Returns the availability schedules of the given user.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:admin`,`scheduler:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:list_availability`,`scheduler:read:list_availability:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "list_availability",
        "parameters" : [ {
          "name" : "page_size",
          "in" : "query",
          "description" : "The maximum number of availability returned on one result page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 250
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The token that specifies which result page to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "Cj8KLwotCgsI3ujvqgYQgIXUGxIeChwKGjBzNzAyZWVtbjBzOTdlZXFhNXE1NWg4ZWJtGgwIzIPVrAYQwM3WrAPAPgE="
          },
          "x-ballerina-name" : "nextPageToken"
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "The return of the specific user's availability.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful availability of the schedule query result of given user.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2001"
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n notFound <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read:admin", "scheduler:read", "scheduler:read:list_availability", "scheduler:read:list_availability:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read:admin", "scheduler:read" ],
          "x-granular-scopes" : [ "scheduler:read:list_availability", "scheduler:read:list_availability:admin" ]
        }
      },
      "post" : {
        "tags" : [ "availability" ],
        "summary" : "Insert availability",
        "description" : "Inserts a user availability schedule. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:availability`,`scheduler:write:availability:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "insert_availability",
        "requestBody" : {
          "description" : "In the request body, it supplies an availability resource properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulerAvailabilityBody"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "If successful, this method returns a availability resource in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse201"
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n unauthorized <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:write:availability", "scheduler:write:availability:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:write:availability", "scheduler:write:availability:admin" ]
        }
      }
    },
    "/scheduler/availability/{availabilityId}" : {
      "get" : {
        "tags" : [ "availability" ],
        "summary" : "Get availability ",
        "description" : "Returns the availability schedule of the given UUID.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:admin`,`scheduler:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:availability`,`scheduler:read:availability:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "get_availability",
        "parameters" : [ {
          "name" : "availabilityId",
          "in" : "path",
          "description" : "The UUID of the availability schedule.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "If successful, this method returns an availability resource in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2002"
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n notFound <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read:admin", "scheduler:read", "scheduler:read:availability", "scheduler:read:availability:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read:admin", "scheduler:read" ],
          "x-granular-scopes" : [ "scheduler:read:availability", "scheduler:read:availability:admin" ]
        }
      },
      "delete" : {
        "tags" : [ "availability" ],
        "summary" : "Delete availability",
        "description" : "Removes a user's availability.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:delete:availability`,`scheduler:delete:availability:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "delete_availability",
        "parameters" : [ {
          "name" : "availabilityId",
          "in" : "path",
          "description" : " The UUID of the availability schedule.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "If successful, this method returns an empty response body."
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n notFound <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:delete:availability", "scheduler:delete:availability:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:delete:availability", "scheduler:delete:availability:admin" ]
        }
      },
      "patch" : {
        "tags" : [ "availability" ],
        "summary" : "Patch availability",
        "description" : "Adjusts the availability schedule content of the given UUID.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:update:availability`,`scheduler:update:availability:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "patch_availability",
        "parameters" : [ {
          "name" : "availabilityId",
          "in" : "path",
          "description" : "The UUID of the availability schedule.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80"
          }
        } ],
        "requestBody" : {
          "description" : "In the request body, supply availability resource properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AvailabilityavailabilityIdBody"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "If successful, this method returns an empty response body."
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n notFound <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:update:availability", "scheduler:update:availability:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:update:availability", "scheduler:update:availability:admin" ]
        }
      }
    },
    "/scheduler/events" : {
      "get" : {
        "tags" : [ "scheduled events" ],
        "summary" : "List scheduled events",
        "description" : "Returns a list of all scheduled events.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:admin`,`scheduler:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:list_scheduled_events`,`scheduler:read:list_scheduled_events:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "list_scheduled_events",
        "parameters" : [ {
          "name" : "to",
          "in" : "query",
          "description" : "The upper bound (exclusive) for an event's start time from which to filter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2011-06-03T10:00:00-07:00"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The lower bound (exclusive) for an event's end time from which to filter. ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2011-06-03T10:00:00-07:00"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The maximum number of events returned on one result page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 250
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "order_by",
          "in" : "query",
          "description" : "This field indicates the start time or the time when the event has been updated.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "startTime"
          },
          "x-ballerina-name" : "orderBy"
        }, {
          "name" : "time_zone",
          "in" : "query",
          "description" : "The time zone in the response.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "UTC"
          },
          "x-ballerina-name" : "timeZone"
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The token that specifies which result page to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "ffffffff97c5b97f_53slvrhet2n0xkxurl5ybgde40"
          },
          "x-ballerina-name" : "nextPageToken"
        }, {
          "name" : "show_deleted",
          "in" : "query",
          "description" : "Whether to include deleted events (with status equals `cancelled`) in the result.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true
          },
          "x-ballerina-name" : "showDeleted"
        }, {
          "name" : "event_type",
          "in" : "query",
          "description" : "Whether to return the pending events.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "pending",
            "enum" : [ "pending" ]
          },
          "x-ballerina-name" : "eventType"
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "The return of the specific user's scheduled event. It's only for admin",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80"
          },
          "x-ballerina-name" : "userId"
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "This field returns search results from meeting ID or summary.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "94777886776"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "If successful, this method returns a response body with the following structure:",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2003"
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n InternalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read:admin", "scheduler:read", "scheduler:read:list_scheduled_events", "scheduler:read:list_scheduled_events:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read:admin", "scheduler:read" ],
          "x-granular-scopes" : [ "scheduler:read:list_scheduled_events", "scheduler:read:list_scheduled_events:admin" ]
        }
      }
    },
    "/scheduler/events/{eventId}" : {
      "get" : {
        "tags" : [ "scheduled events" ],
        "summary" : "Get scheduled events ",
        "description" : "Returns a scheduled event.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:admin`,`scheduler:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:scheduled_event`,`scheduler:read:scheduled_event:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "get_scheduled_events",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "This field indicates whether the admin handles certain users. It's only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "responses" : {
          "200" : {
            "description" : "If successful, this method returns the scheduled event resource in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2004"
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n NotFound <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n InternalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read:admin", "scheduler:read", "scheduler:read:scheduled_event", "scheduler:read:scheduled_event:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read:admin", "scheduler:read" ],
          "x-granular-scopes" : [ "scheduler:read:scheduled_event", "scheduler:read:scheduled_event:admin" ]
        }
      },
      "delete" : {
        "tags" : [ "scheduled events" ],
        "summary" : "Delete scheduled events ",
        "description" : "Deletes a scheduled event.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:delete:scheduled_event`,`scheduler:delete:scheduled_event:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "delete_scheduled_events",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "This field indicates whether the admin handles certain users. It's only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "responses" : {
          "204" : {
            "description" : "If successful, this method returns an empty response body."
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n NotFound <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n Conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n IntenralErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:delete:scheduled_event", "scheduler:delete:scheduled_event:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:delete:scheduled_event", "scheduler:delete:scheduled_event:admin" ]
        }
      },
      "patch" : {
        "tags" : [ "scheduled events" ],
        "summary" : "Patch scheduled events",
        "description" : "Patches a scheduled event.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:update:scheduled_event`,`scheduler:update:scheduled_event:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "patch_scheduled_events",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "The opaque identifier of the scheduled event.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "yev6yf64xot16c0cco50f31tb0"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "This field indicates whether the admin handles certain users. It's only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "requestBody" : {
          "description" : "In the request body, it supplies the relevant portions of event resource.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EventseventIdBody"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "If successful, this method returns an event resource in the response body."
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n InvalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n InternalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:update:scheduled_event", "scheduler:update:scheduled_event:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:update:scheduled_event", "scheduler:update:scheduled_event:admin" ]
        }
      }
    },
    "/scheduler/schedules" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "List schedules",
        "description" : "Returns a list of all schedules.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:admin`,`scheduler:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:list_schedule`,`scheduler:read:list_schedule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "list_schedules",
        "parameters" : [ {
          "name" : "to",
          "in" : "query",
          "description" : "The upper bound (exclusive) for a schedule's start time from which to filter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2011-06-03T10:00:00-07:00"
          }
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The lower bound (exclusive) for a schedule's end time from which to filter.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "2011-06-03T10:00:00-07:00"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The maximum number of schedule results returned on a result page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "example" : 250
          },
          "x-ballerina-name" : "pageSize"
        }, {
          "name" : "next_page_token",
          "in" : "query",
          "description" : "The token that specifies which result page to return.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80"
          },
          "x-ballerina-name" : "nextPageToken"
        }, {
          "name" : "show_deleted",
          "in" : "query",
          "description" : "Whether to include the deleted schedule (with status equals \"cancelled\") in the result.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "example" : true
          },
          "x-ballerina-name" : "showDeleted"
        }, {
          "name" : "time_zone",
          "in" : "query",
          "description" : "The time zone in the response.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "America/Los_Angeles"
          },
          "x-ballerina-name" : "timeZone"
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "The return of the specific user's schedules. Ths setting is only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80"
          },
          "x-ballerina-name" : "userId"
        } ],
        "responses" : {
          "200" : {
            "description" : "If successful, this method returns a response body with this structure.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2005"
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n InvalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n InternalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read:admin", "scheduler:read", "scheduler:read:list_schedule", "scheduler:read:list_schedule:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read:admin", "scheduler:read" ],
          "x-granular-scopes" : [ "scheduler:read:list_schedule", "scheduler:read:list_schedule:admin" ]
        }
      },
      "post" : {
        "tags" : [ "schedules" ],
        "summary" : "Insert schedules",
        "description" : "Creates a schedule.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:insert_schedule`,`scheduler:write:insert_schedule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "insert_schedule",
        "parameters" : [ {
          "name" : "user_id",
          "in" : "query",
          "description" : "This field indicates that the admin handles certain users. This setting is only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "requestBody" : {
          "description" : "In the request body, it supplies the schedule resource properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulerSchedulesBody"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "If successful, this method returns an schedule resource in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2011"
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n InvalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n InternalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:write:insert_schedule", "scheduler:write:insert_schedule:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:write:insert_schedule", "scheduler:write:insert_schedule:admin" ]
        }
      }
    },
    "/scheduler/schedules/{scheduleId}" : {
      "get" : {
        "tags" : [ "schedules" ],
        "summary" : "Get schedules",
        "description" : "Returns a schedule.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:admin`,`scheduler:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:get_schedule`,`scheduler:read:get_schedule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "get_schedule",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "The schedule's unique identifier.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "aec369a4fce6ae655749b00fc7260bfd"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "This field indicates that admins handle certain users. This setting is only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "responses" : {
          "200" : {
            "description" : "If successful, this method returns an schedule resource in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2006"
                }
              }
            }
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n NotFound <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n InternalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read:admin", "scheduler:read", "scheduler:read:get_schedule", "scheduler:read:get_schedule:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read:admin", "scheduler:read" ],
          "x-granular-scopes" : [ "scheduler:read:get_schedule", "scheduler:read:get_schedule:admin" ]
        }
      },
      "delete" : {
        "tags" : [ "schedules" ],
        "summary" : "Delete schedules",
        "description" : "Deletes a schedule.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:delete:delete_schedule`,`scheduler:delete:delete_schedule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "delete_schedules",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "The unique identifier of the schedule.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "aec369a4fce6ae655749b00fc7260bfd"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "This field indicates that the admin handles certain users. This setting is only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "responses" : {
          "204" : {
            "description" : "If successful, this method returns an empty response body."
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401 ` <br>\n unauthorized <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:delete:delete_schedule", "scheduler:delete:delete_schedule:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:delete:delete_schedule", "scheduler:delete:delete_schedule:admin" ]
        }
      },
      "patch" : {
        "tags" : [ "schedules" ],
        "summary" : "Patch schedules",
        "description" : "Patches a schedule. \n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:update:patch_schedule`,`scheduler:update:patch_schedule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "patch_schedule",
        "parameters" : [ {
          "name" : "scheduleId",
          "in" : "path",
          "description" : "The schedule's unique identifier.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "example" : "aec369a4fce6ae655749b00fc7260bfd"
          }
        }, {
          "name" : "user_id",
          "in" : "query",
          "description" : "This field indicates that the admin handles certain users. This setting is only for admin.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl8"
          },
          "x-ballerina-name" : "userId"
        } ],
        "requestBody" : {
          "description" : "In the request body, it supplies the relevant portions of a schedule resource, according to the rules of patch semantics.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulesscheduleIdBody"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "If successful, this method returns an empty response body."
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n InvaildArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n Unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n NotFound <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n InternalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:update:patch_schedule", "scheduler:update:patch_schedule:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:update:patch_schedule", "scheduler:update:patch_schedule:admin" ]
        }
      }
    },
    "/scheduler/schedules/single_use_link" : {
      "post" : {
        "tags" : [ "scheduling links" ],
        "summary" : "Single use link",
        "description" : "Creates a single-use scheduling link.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:admin`,`scheduler:write`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:write:single_use_link`,`scheduler:write:single_use_link:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "single_use_link",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SchedulesSingleUseLinkBody"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "If successful, this method returns a scheduling link URL in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2012"
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n unauthorized <br>\n"
          },
          "409" : {
            "description" : "**HTTP Status Code:** `409` <br>\n Conflict  \n\n **Error Code:** `409` <br>\n conflict <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:write:admin", "scheduler:write", "scheduler:write:single_use_link", "scheduler:write:single_use_link:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:write:admin", "scheduler:write" ],
          "x-granular-scopes" : [ "scheduler:write:single_use_link", "scheduler:write:single_use_link:admin" ]
        }
      }
    },
    "/scheduler/users/{userId}" : {
      "get" : {
        "tags" : [ "users" ],
        "summary" : "Get user",
        "description" : "Returns information about the user.\n\n**[Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:admin`,`scheduler:read`\n\n**[Granular Scopes](https://developers.zoom.us/docs/integrations/oauth-scopes-overview/):** `scheduler:read:user`,`scheduler:read:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId" : "get_user",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "If successful, this method returns user information in the response body.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InlineResponse2007"
                }
              }
            }
          },
          "400" : {
            "description" : "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n invalidArgument <br>\n"
          },
          "401" : {
            "description" : "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `401` <br>\n unauthorized <br>\n"
          },
          "404" : {
            "description" : "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n notFound <br>\n"
          },
          "429" : {
            "description" : "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          },
          "500" : {
            "description" : "**HTTP Status Code:** `500` <br>\n Internal Server Error  \n\n **Error Code:** `500` <br>\n internalErr <br>\n"
          }
        },
        "security" : [ {
          "openapi_oauth" : [ "scheduler:read:admin", "scheduler:read", "scheduler:read:user", "scheduler:read:user:admin" ],
          "openapi_authorization" : [ ]
        } ],
        "x-extensions" : {
          "x-permissions" : [ ],
          "x-macro-scopes" : [ "scheduler:read:admin", "scheduler:read" ],
          "x-granular-scopes" : [ "scheduler:read:user", "scheduler:read:user:admin" ]
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "InlineResponse2006SegmentsRecurrence" : {
        "type" : "object",
        "properties" : {
          "thu" : {
            "type" : "array",
            "description" : "Thursday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "tue" : {
            "type" : "array",
            "description" : "Tuesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "wed" : {
            "type" : "array",
            "description" : "Wednesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sat" : {
            "type" : "array",
            "description" : "Saturday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "fri" : {
            "type" : "array",
            "description" : "Friday ",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sun" : {
            "type" : "array",
            "description" : "Sundays",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "mon" : {
            "type" : "array",
            "description" : "Monday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          }
        },
        "description" : "The week of available time rule."
      },
      "SchedulerAvailabilityBody" : {
        "required" : [ "name", "time_zone" ],
        "type" : "object",
        "properties" : {
          "owner" : {
            "type" : "string",
            "description" : "the owner's ID.",
            "readOnly" : true,
            "example" : "easonfsxsysks3lgchitiw@scheudler.zoom.us"
          },
          "default" : {
            "type" : "boolean",
            "description" : "The default availability schedule in use."
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of this availability schedule.",
            "example" : "Working hours"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The unique ID of availability.",
            "readOnly" : true,
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone for which this availability schedule originates.",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "segments" : {
            "type" : "array",
            "description" : "The date on which the rule needs to be applied outside of the availability rule.",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegments"
            }
          }
        },
        "description" : "The availability schedule set by the user."
      },
      "InlineResponse2011Creator" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "boolean",
            "description" : "This field indicates if you created the schedule. The field is read-only.",
            "readOnly" : true,
            "example" : true
          },
          "display_name" : {
            "type" : "string",
            "description" : "This field indicates the creator of the display name.",
            "readOnly" : true,
            "example" : "name",
            "x-ballerina-name" : "displayName"
          },
          "email" : {
            "type" : "string",
            "description" : "This field indicates the creator's email address.",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          }
        },
        "description" : "The creator of the schedule. The field is read-only."
      },
      "SchedulesSingleUseLinkBody" : {
        "required" : [ "schedule_id" ],
        "type" : "object",
        "properties" : {
          "schedule_id" : {
            "type" : "string",
            "description" : "The unique identifier of a schedule.",
            "example" : "kb1i8qrplqn7r3zmmhphz4uxd0",
            "x-ballerina-name" : "scheduleId"
          }
        }
      },
      "InlineResponse2005AvailabilityRules" : {
        "type" : "object",
        "properties" : {
          "use_custom" : {
            "type" : "boolean",
            "description" : "This field indicates the use of custom availability instead of the rule.",
            "example" : false,
            "x-ballerina-name" : "useCustom"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The ID of this availability rule. ",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdSegmentsRecurrence1"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "email" : {
            "type" : "string",
            "description" : "The owner of this availability rule. ",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          }
        }
      },
      "SchedulerschedulesCustomFields" : {
        "required" : [ "enabled", "format", "include_other", "name", "position", "required" ],
        "type" : "object",
        "properties" : {
          "answer_choices" : {
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "description" : "The invitee's option(s) for `single_select` or `multi_select` type of responses.",
            "items" : {
              "maxLength" : 8192,
              "minLength" : 1,
              "type" : "string",
              "description" : "The invitee's option for `single_select` or `multi_select` type of responses.",
              "example" : "At home"
            },
            "x-ballerina-name" : "answerChoices"
          },
          "custom_field_id" : {
            "type" : "string",
            "description" : "The ID of this question.",
            "example" : "0l6imf50il8jchyapni3p5ckc0",
            "x-ballerina-name" : "customFieldId"
          },
          "format" : {
            "type" : "string",
            "description" : "The type of response that the invitee provides to the custom question. It can be one or multiple lines of text, a phone number, or single- or multiple-select.[`string text phone_number single_select multi_select`]",
            "example" : "text",
            "enum" : [ "text", "string", "phone_number", "choices_one", "choices_many", "select" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The custom question the host created for the event type.",
            "example" : "Please share anything that will help prepare for our meeting."
          },
          "include_other" : {
            "type" : "boolean",
            "description" : "This field is true if the custom question allows invitees to record a written response in addition to single-select or multiple-select type of responses. This field is false if the custom question does not allow invitees to record a written response.",
            "example" : false,
            "x-ballerina-name" : "includeOther"
          },
          "position" : {
            "type" : "number",
            "description" : "The position of this question.",
            "example" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "This field is true if the question the host creates is ON and visible on the event booking page. This field is false if it's OFF and invisible on the event booking page.",
            "example" : true
          },
          "required" : {
            "type" : "boolean",
            "description" : "This field is true if a response to the question created by the host is required for invitees to book the event type. This field is false if a response to the question created by the host is not required for invitees to book the event type.",
            "example" : false
          }
        }
      },
      "SchedulesscheduleIdBody" : {
        "type" : "object",
        "properties" : {
          "add_on_type" : {
            "type" : "string",
            "description" : "The method of `addOn`, such as Zoom meeting, Zoom phone, and offline.",
            "example" : "zoomMeeting",
            "enum" : [ "zoomMeeting", "zoomPhone", "offline" ],
            "x-ballerina-name" : "addOnType"
          },
          "end_date" : {
            "type" : "string",
            "description" : "The schedule's end date.",
            "example" : "2023-12-28",
            "x-ballerina-name" : "endDate"
          },
          "start_time_increment" : {
            "maximum" : 720,
            "minimum" : 5,
            "type" : "number",
            "description" : "This field sets the frequency of available time slots for invitees.",
            "example" : 30,
            "x-ballerina-name" : "startTimeIncrement"
          },
          "summary" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "The event's summary.",
            "example" : "daily meeting"
          },
          "color" : {
            "type" : "string",
            "description" : "The hexadecimal color value of the event type's scheduling page.",
            "example" : "#fff200"
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "The custom question.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdCustomFields"
            },
            "x-ballerina-name" : "customFields"
          },
          "description" : {
            "maxLength" : 8192,
            "type" : "string",
            "description" : "The schedule's description",
            "example" : "15 Minute Meeting"
          },
          "active" : {
            "type" : "boolean",
            "description" : "This field indicates if the schedule is active.",
            "example" : true
          },
          "booking_limit" : {
            "maximum" : 96,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field sets the maximum events allowed per day.",
            "example" : 0,
            "x-ballerina-name" : "bookingLimit"
          },
          "secret" : {
            "type" : "boolean",
            "description" : "This field indicates if the event type is hidden on the owner's main scheduling page.",
            "example" : false
          },
          "time_zone" : {
            "type" : "string",
            "description" : "the timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "availability_rules" : {
            "type" : "array",
            "description" : "The availability time rule.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdAvailabilityRules"
            },
            "x-ballerina-name" : "availabilityRules"
          },
          "capacity" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "number",
            "description" : "The maximum invitees per event.",
            "example" : 1
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          },
          "duration" : {
            "maximum" : 1440,
            "minimum" : 15,
            "type" : "number",
            "description" : "The duration of meeting in minutes, range: [1, 1440].",
            "example" : 30
          },
          "cushion" : {
            "maximum" : 14340,
            "minimum" : 0,
            "type" : "number",
            "description" : "The minimum time before a schedule starts that attendees can book.",
            "example" : 0
          },
          "location" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The information for a custom location.",
            "example" : "AAA office"
          },
          "buffer" : {
            "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdBuffer"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdSegmentsRecurrence1"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "slug" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string",
            "description" : "The event portion of the event's URL that identifies a specific web page.",
            "example" : "sales"
          },
          "interval_type" : {
            "type" : "string",
            "description" : "The schedule time range. Unlimited means forever and fixed means using `startDate` and `endDate`.",
            "example" : "fixed",
            "enum" : [ "unlimited", "fixed" ],
            "x-ballerina-name" : "intervalType"
          },
          "availability_override" : {
            "type" : "boolean",
            "description" : "This field indicates the use of the availability rule.",
            "example" : false,
            "x-ballerina-name" : "availabilityOverride"
          },
          "start_date" : {
            "type" : "string",
            "description" : "The schedule's start date.",
            "example" : "2023-12-21",
            "x-ballerina-name" : "startDate"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of schedule, confirmed or cancelled.",
            "example" : "confirmed",
            "enum" : [ "confirmed", "cancelled" ]
          }
        }
      },
      "InlineResponse2003Items" : {
        "type" : "object",
        "properties" : {
          "summary" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "The event's summary.",
            "example" : "daily meeting"
          },
          "attendees" : {
            "type" : "array",
            "description" : "The attendees of the event.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2003Attendees"
            }
          },
          "meeting_notes" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The meeting notes of the event.",
            "example" : "meeting notes",
            "x-ballerina-name" : "meetingNotes"
          },
          "description" : {
            "maxLength" : 8192,
            "type" : "string",
            "description" : "The event's description.",
            "example" : "15 Minute Meeting"
          },
          "end_date_time" : {
            "type" : "string",
            "description" : "The scheduled event end date time.",
            "example" : "2023-12-21T16:30:00+08:00",
            "x-ballerina-name" : "endDateTime"
          },
          "event_id" : {
            "type" : "string",
            "description" : "The unique identifier of event.",
            "example" : "woft7torlatbw8ek24bmit5k60",
            "x-ballerina-name" : "eventId"
          },
          "event_type" : {
            "type" : "string",
            "description" : "This field indicates the type is default(scheduled) or pending event.",
            "readOnly" : true,
            "example" : "default",
            "enum" : [ "default", "pending" ],
            "x-ballerina-name" : "eventType"
          },
          "tracking_params" : {
            "type" : "array",
            "description" : "The information to track the source of invitee. This occurs when you add UTM parameters in schedule links.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2003TrackingParams"
            },
            "x-ballerina-name" : "trackingParams"
          },
          "guests" : {
            "type" : "array",
            "description" : "The guest's collection.",
            "items" : {
              "type" : "string",
              "description" : "The guest's email.",
              "example" : "tom@zoom.us"
            }
          },
          "location" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The information for a custom location.",
            "example" : "AAA office"
          },
          "start_date_time" : {
            "type" : "string",
            "description" : "The scheduled event start date time.",
            "example" : "2023-12-21T16:00:00+08:00",
            "x-ballerina-name" : "startDateTime"
          },
          "schedule_id" : {
            "type" : "string",
            "description" : "The unique identifier of schedule.",
            "example" : "ygfx661g9x8dwcgeusdqhsplc0_20231220T160000Z",
            "x-ballerina-name" : "scheduleId"
          },
          "updated" : {
            "type" : "string",
            "description" : "The moment the event was updated.",
            "example" : "2023-12-21T06:19:28.309Z"
          },
          "external_location" : {
            "description" : "The meeting details for when users have scheduled appointments.",
            "readOnly" : true,
            "oneOf" : [ {
              "type" : "object",
              "properties" : {
                "kind" : {
                  "type" : "string",
                  "description" : "The type of meeting specified in the schedule.",
                  "example" : "zoom"
                },
                "meeting_id" : {
                  "type" : "string",
                  "description" : "The unique identifier of the meeting in string format.",
                  "example" : "94777886776"
                },
                "personal_meeting_id" : {
                  "type" : "string",
                  "description" : "The personal meeting id in string format.",
                  "example" : "98656786887"
                },
                "meeting_passcode" : {
                  "type" : "string",
                  "description" : "The passcode of Zoom meeting.",
                  "example" : "958000"
                },
                "meeting_description" : {
                  "type" : "string",
                  "description" : "The description of Zoom meeting.",
                  "example" : "Invite you to meeting"
                },
                "meeting_join_url" : {
                  "type" : "string",
                  "description" : "The URL of Zoom meeting",
                  "example" : "https://zoom.us/j/7427752805"
                }
              }
            } ],
            "x-ballerina-name" : "externalLocation"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of event: confirmed or cancelled.",
            "example" : "confirmed",
            "enum" : [ "confirmed", "cancelled" ]
          }
        }
      },
      "InlineResponse2011CustomFields" : {
        "required" : [ "enabled", "format", "include_other", "name", "position", "required" ],
        "type" : "object",
        "properties" : {
          "answer_choices" : {
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "description" : "The invitee's option(s) for single_select or multi_select type of responses.",
            "items" : {
              "maxLength" : 8192,
              "minLength" : 1,
              "type" : "string",
              "description" : "The invitee's option for single_select or multi_select type of responses.",
              "example" : "At home"
            },
            "x-ballerina-name" : "answerChoices"
          },
          "custom_field_id" : {
            "type" : "string",
            "description" : "The ID of this question.",
            "example" : "0l6imf50il8jchyapni3p5ckc0",
            "x-ballerina-name" : "customFieldId"
          },
          "format" : {
            "type" : "string",
            "description" : "The type of response that the invitee provides to the custom question. It can be one or multiple lines of text, a phone number, or single- or multiple-select.[`string text phone_number single_select multi_select`]",
            "example" : "text",
            "enum" : [ "text", "string", "phone_number", "choices_one", "choices_many", "select" ]
          },
          "name" : {
            "type" : "string",
            "description" : "The custom question the host created for the event type.",
            "example" : "Please share anything that will help prepare for our meeting."
          },
          "include_other" : {
            "type" : "boolean",
            "description" : "This field is true if the custom question allows invitees to record a written response in addition to single-select or multiple-select type of responses. This field is false if the custom question does not allow invitees to record a written response.",
            "example" : false,
            "x-ballerina-name" : "includeOther"
          },
          "position" : {
            "type" : "number",
            "description" : "The position of this question.",
            "example" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "This field is true if the question the host creates is ON and visible on the event booking page. This field is false if it's OFF and invisible on the event booking page.",
            "example" : true
          },
          "required" : {
            "type" : "boolean",
            "description" : "This field is true if a response to the question created by the host is required for invitees to book the event type. This field is false if a response to the question created by the host is not required for invitees to book the event type.",
            "example" : false
          }
        }
      },
      "InlineResponse2006AvailabilityRules" : {
        "type" : "object",
        "properties" : {
          "use_custom" : {
            "type" : "boolean",
            "description" : "This field indicates the use of custom availability instead of the rule.",
            "example" : false,
            "x-ballerina-name" : "useCustom"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The ID of this availability rule. ",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InlineResponse2006SegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "email" : {
            "type" : "string",
            "description" : "The owner of this availability rule. ",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          }
        }
      },
      "InlineResponse2011AvailabilityRules" : {
        "type" : "object",
        "properties" : {
          "use_custom" : {
            "type" : "boolean",
            "description" : "This field indicates the use of custom availability instead of the rule.",
            "example" : false,
            "x-ballerina-name" : "useCustom"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The ID of this availability rule. ",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesSegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "email" : {
            "type" : "string",
            "description" : "The owner of this availability rule. ",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          }
        }
      },
      "InlineResponse2011Organizer" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "boolean",
            "description" : "This field indicates if this user is the organizer. This field is read-only.",
            "readOnly" : true,
            "example" : true
          },
          "display_name" : {
            "type" : "string",
            "description" : "The organizer's display name.",
            "readOnly" : true,
            "example" : "name",
            "x-ballerina-name" : "displayName"
          },
          "email" : {
            "type" : "string",
            "description" : "The organizer's email address.",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          }
        },
        "description" : "The organizer of the schedule. This field is read-only."
      },
      "SchedulerschedulesscheduleIdAvailabilityRules" : {
        "type" : "object",
        "properties" : {
          "use_custom" : {
            "type" : "boolean",
            "description" : "This field indicates whether to use the custom availability instead of the rule.",
            "example" : false,
            "x-ballerina-name" : "useCustom"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The ID of this availability rule. ",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdSegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "email" : {
            "type" : "string",
            "description" : "The owner of this availability rule. ",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdSegments"
            }
          }
        }
      },
      "ScheduleravailabilitySegments" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "This field indicates the start date to override.",
            "example" : "2024-01-07T09:00:00Z"
          },
          "end" : {
            "type" : "string",
            "description" : "This field indicates the end date to override.",
            "example" : "2024-01-08T09:00:00Z"
          }
        },
        "description" : "The date interval to override."
      },
      "InlineResponse2004TrackingParams" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "The scheduler tags that correspond to UTM parameters one by one.",
            "example" : "UTM_Source"
          },
          "value" : {
            "type" : "string",
            "description" : "The value of UTM parameters set in schedule links by host.",
            "example" : "zoom"
          },
          "key" : {
            "type" : "string",
            "description" : "The UTM parameters in schedule links.",
            "example" : "utm_source"
          }
        }
      },
      "InlineResponse2001Items" : {
        "type" : "object",
        "properties" : {
          "owner" : {
            "type" : "string",
            "description" : "The owner's ID.",
            "example" : "easonfsxsysks3lgchitiw@scheudler.zoom.us"
          },
          "default" : {
            "type" : "boolean",
            "example" : true
          },
          "name" : {
            "type" : "string",
            "example" : "The working hours."
          },
          "availability_id" : {
            "type" : "string",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InlineResponse2001SegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          }
        }
      },
      "InlineResponse2003Attendees" : {
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "This field indicates when the attendee attended this event.",
            "readOnly" : true,
            "example" : "2023-12-21T06:19:23.899Z"
          },
          "attendee_id" : {
            "type" : "string",
            "description" : "The ID of attendee.",
            "readOnly" : true,
            "example" : "z7q0q2962w8iyj87249zbi7t10",
            "x-ballerina-name" : "attendeeId"
          },
          "last_name" : {
            "type" : "string",
            "description" : " The attendee's last name.",
            "example" : "tom",
            "x-ballerina-name" : "lastName"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The attendee's name.",
            "example" : "bob",
            "x-ballerina-name" : "displayName"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The attendee's time zone.",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "no_show" : {
            "type" : "boolean",
            "description" : "Whether to show events or not.",
            "example" : false,
            "x-ballerina-name" : "noShow"
          },
          "booker" : {
            "type" : "boolean",
            "description" : "Whether the attendee is the booker.",
            "readOnly" : true,
            "example" : true
          },
          "first_name" : {
            "type" : "string",
            "description" : "The attendee's first name.",
            "example" : "green",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The attendee's email.",
            "example" : "abc@zoom.us"
          }
        }
      },
      "ScheduleravailabilitySegmentsRecurrence" : {
        "type" : "object",
        "properties" : {
          "thu" : {
            "type" : "array",
            "description" : "Thursday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "tue" : {
            "type" : "array",
            "description" : "Tuesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "wed" : {
            "type" : "array",
            "description" : "Wednesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sat" : {
            "type" : "array",
            "description" : "Saturday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "fri" : {
            "type" : "array",
            "description" : "Friday ",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sun" : {
            "type" : "array",
            "description" : "Sundays",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "mon" : {
            "type" : "array",
            "description" : "Monday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          }
        },
        "description" : "The rules of this availability schedule."
      },
      "InlineResponse2001SegmentsRecurrence" : {
        "type" : "object",
        "properties" : {
          "thu" : {
            "type" : "array",
            "description" : "Thursday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "tue" : {
            "type" : "array",
            "description" : "Tuesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "wed" : {
            "type" : "array",
            "description" : "Wednesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sat" : {
            "type" : "array",
            "description" : "Saturday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "fri" : {
            "type" : "array",
            "description" : "Friday ",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sun" : {
            "type" : "array",
            "description" : "Sunday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "mon" : {
            "type" : "array",
            "description" : "Monday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          }
        }
      },
      "InlineResponse200PreviousPeriod" : {
        "type" : "object",
        "properties" : {
          "all_host_available" : {
            "type" : "integer",
            "description" : "The number of \"all host available\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "allHostAvailable"
          },
          "scheduled_events_rescheduled" : {
            "type" : "integer",
            "description" : "The number of rescheduled scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsRescheduled"
          },
          "scheduled_events_completed" : {
            "type" : "integer",
            "description" : "The number of completed scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsCompleted"
          },
          "schedules_canceled" : {
            "type" : "integer",
            "description" : "The number of cancelled schedules.",
            "example" : 10,
            "x-ballerina-name" : "schedulesCanceled"
          },
          "one_off_meeting" : {
            "type" : "integer",
            "description" : "The number of \"one-off\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "oneOffMeeting"
          },
          "meeting_poll" : {
            "type" : "integer",
            "description" : "The number of \"meeting poll\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "meetingPoll"
          },
          "one_to_many" : {
            "type" : "integer",
            "description" : "The number of \"one to many\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "oneToMany"
          },
          "any_host_available" : {
            "type" : "integer",
            "description" : "The number of \"any host available\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "anyHostAvailable"
          },
          "scheduled_events_canceled" : {
            "type" : "integer",
            "description" : "The number of cancelled scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsCanceled"
          },
          "one_to_one" : {
            "type" : "integer",
            "description" : "The number of \"one to one\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "oneToOne"
          },
          "scheduled_events_created" : {
            "type" : "integer",
            "description" : "The number of created scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsCreated"
          },
          "schedules_created" : {
            "type" : "integer",
            "description" : "The number of created schedules.",
            "example" : 10,
            "x-ballerina-name" : "schedulesCreated"
          }
        },
        "description" : "the stats of the previous period with a length of also N. Last N day is counting from today and backtrace N days. Previous period is counting from N days ago and back tracking another N days",
        "example" : "\"previous_period\":{{\"created_scheduled_events\":65},{\"completed_scheduled_events\":34},{\"created_schedules\":20},{\"cancelled_scheduled_events\":14},{\"rescheduled_scheduled_events\":8},{\"cancelled_schedules\":3},{\"one_to_one\":10},{\"any_host_available\":5},{\"one_off_meeting\":2},{\"all_host_available\":1},{\"meeting_poll\":1},{\"one_to_many\":1}}"
      },
      "SchedulereventseventIdAttendees" : {
        "type" : "object",
        "properties" : {
          "attendee_id" : {
            "type" : "string",
            "description" : "The ID of attendee.",
            "readOnly" : true,
            "example" : "z7q0q2962w8iyj87249zbi7t10",
            "x-ballerina-name" : "attendeeId"
          },
          "no_show" : {
            "type" : "boolean",
            "description" : "This field inidcates the attendee if shown in the scheduled event",
            "example" : false,
            "x-ballerina-name" : "noShow"
          },
          "email" : {
            "type" : "string",
            "description" : "The attendee's email.",
            "example" : "abc@zoom.us"
          }
        }
      },
      "SchedulerSchedulesBody" : {
        "required" : [ "availability_override", "availability_rules", "capacity", "end", "start", "type" ],
        "type" : "object",
        "properties" : {
          "add_on_type" : {
            "type" : "string",
            "description" : "The method of the type of `addOn`, such as Zoom meeting, Zoom phone, or offline.",
            "example" : "zoomMeeting",
            "enum" : [ "zoomMeeting", "zoomPhone", "offline" ],
            "x-ballerina-name" : "addOnType"
          },
          "end_date" : {
            "type" : "string",
            "description" : "The schedule's end date.",
            "example" : "2023-12-28",
            "x-ballerina-name" : "endDate"
          },
          "start_time_increment" : {
            "maximum" : 720,
            "minimum" : 5,
            "type" : "number",
            "description" : "This field sets the frequency of available time slots for invitees.",
            "example" : 30,
            "x-ballerina-name" : "startTimeIncrement"
          },
          "summary" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "The event's summary.",
            "example" : "daily meeting"
          },
          "schedule_type" : {
            "type" : "string",
            "description" : "This field indicates if the schedule type is \"one\" (belongs to an individual user) or \"multiple\".",
            "example" : "one",
            "enum" : [ "one", "multiple" ],
            "x-ballerina-name" : "scheduleType"
          },
          "color" : {
            "type" : "string",
            "description" : "The hexadecimal color value of the event type's scheduling page.",
            "example" : "#fff200"
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "This field contains the custom question.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesCustomFields"
            },
            "x-ballerina-name" : "customFields"
          },
          "description" : {
            "maxLength" : 8192,
            "type" : "string",
            "description" : "The schedule's description.",
            "example" : "15 Minute Meeting"
          },
          "active" : {
            "type" : "boolean",
            "description" : "This field indicates if the schedule is active.",
            "example" : true
          },
          "booking_limit" : {
            "maximum" : 96,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field sets the maximum events allowed per day.",
            "example" : 0,
            "x-ballerina-name" : "bookingLimit"
          },
          "secret" : {
            "type" : "boolean",
            "description" : "This field indicates if the event type is hidden on the owner's main scheduling page.",
            "example" : false
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "availability_rules" : {
            "type" : "array",
            "description" : "The availability of the time rule.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesAvailabilityRules"
            },
            "x-ballerina-name" : "availabilityRules"
          },
          "capacity" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "number",
            "description" : "This field indicates the maximum invitees per event.",
            "example" : 1
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          },
          "duration" : {
            "maximum" : 1440,
            "minimum" : 15,
            "type" : "number",
            "description" : "This field indicates the duration of the meeting in minutes, range: [1, 1440].",
            "example" : 30
          },
          "cushion" : {
            "maximum" : 14340,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field indicates the minimum time before a schedule starts when the attendees can book.",
            "example" : 0
          },
          "location" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The information for a custom location.",
            "example" : "AAA office"
          },
          "buffer" : {
            "$ref" : "#/components/schemas/SchedulerschedulesBuffer"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesSegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "interval_type" : {
            "type" : "string",
            "description" : "The schedule time range. Unlimited means forever and fixed means using `startDate` and `endDate`.",
            "example" : "fixed",
            "enum" : [ "unlimited", "fixed" ],
            "x-ballerina-name" : "intervalType"
          },
          "slug" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string",
            "description" : "The event portion of the event's URL that identifies a specific web page.",
            "example" : "sales"
          },
          "availability_override" : {
            "type" : "boolean",
            "description" : "This field indicates the use of the availability rule.",
            "example" : false,
            "x-ballerina-name" : "availabilityOverride"
          },
          "start_date" : {
            "type" : "string",
            "description" : "The schedule's start date.",
            "example" : "2023-12-21",
            "x-ballerina-name" : "startDate"
          }
        }
      },
      "SchedulerschedulesSegmentsRecurrence" : {
        "type" : "object",
        "properties" : {
          "thu" : {
            "type" : "array",
            "description" : "Thursday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "tue" : {
            "type" : "array",
            "description" : "Tuesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "wed" : {
            "type" : "array",
            "description" : "Wednesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sat" : {
            "type" : "array",
            "description" : "Saturday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "fri" : {
            "type" : "array",
            "description" : "Friday ",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sun" : {
            "type" : "array",
            "description" : "Sundays",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "mon" : {
            "type" : "array",
            "description" : "Monday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          }
        },
        "description" : "The week of the available time rule."
      },
      "InlineResponse2003TrackingParams" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "The scheduler tags that correspond to UTM parameters one by one.",
            "example" : "UTM_Source"
          },
          "value" : {
            "type" : "string",
            "description" : "The value of UTM parameters set in schedule links by host.",
            "example" : "zoom"
          },
          "key" : {
            "type" : "string",
            "description" : "The UTM parameters in the schedule links.",
            "example" : "utm_source"
          }
        }
      },
      "SchedulerschedulesBuffer" : {
        "type" : "object",
        "properties" : {
          "before" : {
            "maximum" : 240,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field adds the time after the booked schedule.",
            "example" : 0
          },
          "after" : {
            "maximum" : 240,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field adds the time before the booked schedule.",
            "example" : 0
          }
        },
        "description" : "This field indicates the extra time before or after the booked schedule."
      },
      "SchedulerschedulesscheduleIdBuffer" : {
        "type" : "object",
        "properties" : {
          "before" : {
            "maximum" : 240,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field adds time after the booked schedule.",
            "example" : 0
          },
          "after" : {
            "maximum" : 240,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field adds time before the booked schedule.",
            "example" : 0
          }
        },
        "description" : "The extra time before or after booked schedule."
      },
      "SchedulerschedulesscheduleIdSegments" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "The start date-time of the segment.",
            "example" : "2023-12-21T06:00:00Z"
          },
          "end" : {
            "type" : "string",
            "description" : "The end date-time of the segment.",
            "example" : "2023-12-21T06:00:00Z"
          }
        }
      },
      "InlineResponse201" : {
        "type" : "object",
        "properties" : {
          "owner" : {
            "type" : "string",
            "description" : "An URI reference to a user.",
            "example" : "easonfsxsysks3lgchitiw"
          },
          "default" : {
            "type" : "boolean",
            "description" : "The default availability schedule in use.",
            "example" : false
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this availability schedule.",
            "example" : "Working hours"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The unique ID of the availability.",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone for which this availability schedule originates.",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "segments" : {
            "type" : "array",
            "description" : "The date on which the rule needs to be applied outside of the availability rule.",
            "items" : {
              "type" : "object",
              "description" : "The date interval to override."
            }
          }
        },
        "description" : "The availability schedule set by the user."
      },
      "InlineResponse2004Attendees" : {
        "type" : "object",
        "properties" : {
          "created" : {
            "type" : "string",
            "description" : "This field indicates when the attendee attended this event.",
            "readOnly" : true,
            "example" : "2023-12-21T06:19:23.899Z"
          },
          "attendee_id" : {
            "type" : "string",
            "description" : "The ID of attendee.",
            "readOnly" : true,
            "example" : "z7q0q2962w8iyj87249zbi7t10",
            "x-ballerina-name" : "attendeeId"
          },
          "last_name" : {
            "type" : "string",
            "description" : " The attendee's last name.",
            "example" : "tom",
            "x-ballerina-name" : "lastName"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The attendee's name.",
            "example" : "bob",
            "x-ballerina-name" : "displayName"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The attendee's time zone.",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "no_show" : {
            "type" : "boolean",
            "description" : "Whether or not to show the event.",
            "example" : false,
            "x-ballerina-name" : "noShow"
          },
          "booker" : {
            "type" : "boolean",
            "description" : "Whether the attendee is the booker.",
            "readOnly" : true,
            "example" : true
          },
          "first_name" : {
            "type" : "string",
            "description" : "The attendee's first name.",
            "example" : "green",
            "x-ballerina-name" : "firstName"
          },
          "email" : {
            "type" : "string",
            "description" : "The attendee's email.",
            "example" : "abc@zoom.us"
          }
        }
      },
      "InlineResponse200" : {
        "type" : "object",
        "properties" : {
          "popular_schedules" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "The most popular schedules in the given time range.",
            "example" : {
              "Popular schedules" : [ {
                "Test 1-1" : 5
              }, {
                "Test 1-to-many" : 4
              }, {
                "Test any host available" : 3
              } ]
            },
            "items" : {
              "type" : "object",
              "description" : "The scheduled event's name and booked times."
            },
            "x-ballerina-name" : "popularSchedules"
          },
          "users_with_least_events" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "The users with the least scheduled events.",
            "example" : {
              "Users with the least events" : [ {
                "Dan Smith" : 5
              }, {
                "Allan Swift" : 10
              } ]
            },
            "items" : {
              "type" : "object",
              "description" : "The user's display name and number of scheduled events."
            },
            "x-ballerina-name" : "usersWithLeastEvents"
          },
          "last_n_days" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InlineResponse200LastNDays"
            } ],
            "x-ballerina-name" : "lastNDays"
          },
          "popular_time_of_day" : {
            "maxItems" : 7,
            "type" : "array",
            "description" : "The distribution of number of events scheduled in a day.",
            "example" : {
              "Popular times (hour of day)" : [ {
                "11" : 16
              }, {
                "12" : 6
              }, {
                "16" : 3
              } ]
            },
            "items" : {
              "type" : "object",
              "description" : "The hour index."
            },
            "x-ballerina-name" : "popularTimeOfDay"
          },
          "previous_period" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/InlineResponse200PreviousPeriod"
            } ],
            "x-ballerina-name" : "previousPeriod"
          },
          "event_distribution_by_duration" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "The event distribution by duration.",
            "items" : {
              "type" : "object",
              "properties" : { },
              "description" : "The event name and its duration in minutes.",
              "example" : {
                "Event distribution by duration" : [ {
                  "30" : 65
                }, {
                  "45" : 15
                }, {
                  "60" : 35
                } ]
              }
            },
            "x-ballerina-name" : "eventDistributionByDuration"
          },
          "popular_time_of_week" : {
            "maxItems" : 24,
            "type" : "array",
            "description" : "The distribution of number of events scheduled in a week.",
            "example" : {
              "Popular times (day of week)" : [ {
                "Fri" : 20
              }, {
                "Wed" : 16
              }, {
                "Thu" : 11
              }, {
                "Tue" : 8
              }, {
                "Mon" : 6
              }, {
                "Sat" : 3
              }, {
                "Sun" : 1
              } ]
            },
            "items" : {
              "type" : "object",
              "description" : "day abbreviation"
            },
            "x-ballerina-name" : "popularTimeOfWeek"
          },
          "users_with_most_events" : {
            "maxItems" : 5,
            "type" : "array",
            "description" : "The users with the most scheduled events.",
            "example" : {
              "Users with the most events" : [ {
                "Dan Smith" : 65
              }, {
                "Allan Swift" : 20
              } ]
            },
            "items" : {
              "type" : "object",
              "description" : "The user's display name and number of scheduled events."
            },
            "x-ballerina-name" : "usersWithMostEvents"
          }
        }
      },
      "SchedulerschedulesscheduleIdSegmentsRecurrence" : {
        "type" : "object",
        "properties" : {
          "thu" : {
            "type" : "array",
            "description" : "Thursday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "tue" : {
            "type" : "array",
            "description" : "Tuesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "wed" : {
            "type" : "array",
            "description" : "Wednesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sat" : {
            "type" : "array",
            "description" : "Saturday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "fri" : {
            "type" : "array",
            "description" : "Friday ",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sun" : {
            "type" : "array",
            "description" : "Sunday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "mon" : {
            "type" : "array",
            "description" : "Monday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          }
        },
        "description" : "The week of available time rule."
      },
      "EventseventIdBody" : {
        "type" : "object",
        "properties" : {
          "attendees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SchedulereventseventIdAttendees"
            }
          },
          "meeting_notes" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The meeting notes of the event.",
            "example" : "meeting notes",
            "x-ballerina-name" : "meetingNotes"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of event: confirmed or cancelled.",
            "example" : "confirmed",
            "enum" : [ "confirmed", "cancelled" ]
          }
        },
        "description" : "The portions of the event resource."
      },
      "AvailabilityavailabilityIdBody" : {
        "required" : [ "name", "time_zone" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "type" : "boolean",
            "description" : "The default availability schedule in use."
          },
          "name" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "The name of this availability schedule.",
            "example" : "Working hours"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone for which this availability schedule originates.",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "segments" : {
            "type" : "array",
            "description" : "The date on which the rule needs to be applied outside of the availability rule.",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilityavailabilityIdSegments"
            }
          }
        },
        "description" : "The availability schedule set by the user."
      },
      "SchedulerschedulesscheduleIdSegmentsRecurrence1" : {
        "type" : "object",
        "properties" : {
          "thu" : {
            "type" : "array",
            "description" : "Thursday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "tue" : {
            "type" : "array",
            "description" : "Tuesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "wed" : {
            "type" : "array",
            "description" : "Wednesday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sat" : {
            "type" : "array",
            "description" : "Saturday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "fri" : {
            "type" : "array",
            "description" : "Friday ",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "sun" : {
            "type" : "array",
            "description" : "Sunday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          },
          "mon" : {
            "type" : "array",
            "description" : "Monday",
            "items" : {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrenceSun"
            }
          }
        },
        "description" : "The week of the available time rule."
      },
      "InlineResponse2005Creator" : {
        "type" : "object",
        "properties" : {
          "self" : {
            "type" : "boolean",
            "description" : "This field indicates if you created the schedule. The field is read-only.",
            "readOnly" : true,
            "example" : true
          },
          "display_name" : {
            "type" : "string",
            "description" : "This field indicates the creator of the display name.",
            "readOnly" : true,
            "example" : "name",
            "x-ballerina-name" : "displayName"
          },
          "email" : {
            "type" : "string",
            "description" : "This field indicates the creator's email address.",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          }
        },
        "description" : "The creator of the schedule. This field is read-only."
      },
      "InlineResponse2012" : {
        "required" : [ "scheduling_url" ],
        "type" : "object",
        "properties" : {
          "scheduling_url" : {
            "type" : "string",
            "description" : "The scheduling link URL.",
            "example" : "https://scheduler.zoomdev.us/manage/xu3o9skk6ygg8gk5hjvokjm2c0",
            "x-ballerina-name" : "schedulingUrl"
          }
        }
      },
      "InlineResponse2011" : {
        "type" : "object",
        "properties" : {
          "end_date" : {
            "type" : "string",
            "description" : "The schedule's end date.",
            "example" : "2023-12-20",
            "x-ballerina-name" : "endDate"
          },
          "color" : {
            "type" : "string",
            "description" : "The hexadecimal color value of the event type's scheduling page.",
            "example" : "#fff200"
          },
          "description" : {
            "maxLength" : 8192,
            "type" : "string",
            "description" : "The schedule's description.",
            "example" : "15 Minute Meeting"
          },
          "secret" : {
            "type" : "boolean",
            "description" : "This field indicates if the event type is hidden on the owner's main scheduling page.",
            "example" : false
          },
          "availability_rules" : {
            "type" : "array",
            "description" : "The availability of the time rule.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2011AvailabilityRules"
            },
            "x-ballerina-name" : "availabilityRules"
          },
          "capacity" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "number",
            "description" : "This field indicates the maximum invitees per event.",
            "example" : 1
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          },
          "duration" : {
            "maximum" : 1440,
            "minimum" : 15,
            "type" : "number",
            "description" : "This field indicates the duration of the meeting in minutes, range: [1, 1440].",
            "example" : 30
          },
          "cushion" : {
            "maximum" : 14340,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field indicates the minimum time before a schedule starts when the attendees can book.",
            "example" : 0
          },
          "buffer" : {
            "$ref" : "#/components/schemas/SchedulerschedulesBuffer"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesSegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "slug" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string",
            "description" : "The event portion of the event's URL that identifies a specific web page.",
            "example" : "sales"
          },
          "interval_type" : {
            "type" : "string",
            "description" : "The schedule time range. Unlimited means forever and fixed means using `startDate` and `endDate`.",
            "example" : "fixed",
            "enum" : [ "unlimited", "fixed" ],
            "x-ballerina-name" : "intervalType"
          },
          "start_date" : {
            "type" : "string",
            "description" : "The schedule's start date.",
            "example" : "2023-12-21",
            "x-ballerina-name" : "startDate"
          },
          "add_on_type" : {
            "type" : "string",
            "description" : "The method of the type of `addOn`, such as Zoom meeting, Zoom phone, or offline.",
            "example" : "zoomMeeting",
            "enum" : [ "zoomMeeting", "zoomPhone", "offline" ],
            "x-ballerina-name" : "addOnType"
          },
          "scheduling_url" : {
            "type" : "string",
            "description" : "The URL of the user’s scheduling site where invitees book this event type.",
            "example" : "https://scheduler.zoom.us/zoom_us/sales",
            "x-ballerina-name" : "schedulingUrl"
          },
          "start_time_increment" : {
            "maximum" : 720,
            "minimum" : 5,
            "type" : "number",
            "description" : "This field sets the frequency of available time slots for invitees.",
            "example" : 30,
            "x-ballerina-name" : "startTimeIncrement"
          },
          "summary" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "The event's summary.",
            "example" : "daily meeting"
          },
          "creator" : {
            "$ref" : "#/components/schemas/InlineResponse2011Creator"
          },
          "schedule_type" : {
            "type" : "string",
            "description" : "This field indicates if the schedule type is \"one\" (belongs to an individual user) or \"multiple\".",
            "example" : "one",
            "enum" : [ "one", "multiple" ],
            "x-ballerina-name" : "scheduleType"
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "This field contains the custom question.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2011CustomFields"
            },
            "x-ballerina-name" : "customFields"
          },
          "active" : {
            "type" : "boolean",
            "description" : "This field indicates if the schedule is active.",
            "example" : true
          },
          "booking_limit" : {
            "maximum" : 96,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field sets the maximum events allowed per day.",
            "example" : 0,
            "x-ballerina-name" : "bookingLimit"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "the timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "organizer" : {
            "$ref" : "#/components/schemas/InlineResponse2011Organizer"
          },
          "location" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The information for a custom location.",
            "example" : "AAA office"
          },
          "schedule_id" : {
            "type" : "string",
            "description" : "The unique identifier of schedule.",
            "example" : "ygfx661g9x8dwcgeusdqhsplc0",
            "x-ballerina-name" : "scheduleId"
          },
          "updated" : {
            "type" : "string",
            "description" : "The moment the schedule type was updated.",
            "readOnly" : true,
            "example" : "2023-12-21T06:18:32.087Z"
          },
          "availability_override" : {
            "type" : "boolean",
            "description" : "This field indicates the use of the availability rule.",
            "example" : false,
            "x-ballerina-name" : "availabilityOverride"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of schedule: confirmed or cancelled.",
            "example" : "confirmed",
            "enum" : [ "confirmed", "cancelled" ]
          }
        }
      },
      "SchedulerschedulesAvailabilityRules" : {
        "type" : "object",
        "properties" : {
          "use_custom" : {
            "type" : "boolean",
            "description" : "This field indicates the use of custom availability instead of the rule.",
            "example" : false,
            "x-ballerina-name" : "useCustom"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The ID of this availability rule. ",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesSegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "the timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "email" : {
            "type" : "string",
            "description" : "The owner of this availability rule. ",
            "example" : "easonfsxsysks3lgchitiw@scheduler.zoom.us"
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          }
        }
      },
      "ScheduleravailabilitySegmentsRecurrenceSun" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "The start time of this day.",
            "example" : "09:00"
          },
          "end" : {
            "type" : "string",
            "description" : "The end time of this day.",
            "example" : "17:00"
          }
        }
      },
      "InlineResponse200LastNDays" : {
        "type" : "object",
        "properties" : {
          "all_host_available" : {
            "type" : "integer",
            "description" : "The number of \"all host available\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "allHostAvailable"
          },
          "scheduled_events_rescheduled" : {
            "type" : "integer",
            "description" : "The number of rescheduled scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsRescheduled"
          },
          "scheduled_events_completed" : {
            "type" : "integer",
            "description" : "The number of completed scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsCompleted"
          },
          "schedules_canceled" : {
            "type" : "integer",
            "description" : "The number of cancelled schedules.",
            "example" : 10,
            "x-ballerina-name" : "schedulesCanceled"
          },
          "one_off_meeting" : {
            "type" : "integer",
            "description" : "The number of \"one-off\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "oneOffMeeting"
          },
          "meeting_poll" : {
            "type" : "integer",
            "description" : "The number of \"meeting poll\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "meetingPoll"
          },
          "one_to_many" : {
            "type" : "integer",
            "description" : "The number of \"one to many\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "oneToMany"
          },
          "any_host_available" : {
            "type" : "integer",
            "description" : "The number of \"any host available\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "anyHostAvailable"
          },
          "scheduled_events_canceled" : {
            "type" : "integer",
            "description" : "The number of cancelled scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsCanceled"
          },
          "one_to_one" : {
            "type" : "integer",
            "description" : "The number of \"one to one\" type schedules.",
            "example" : 10,
            "x-ballerina-name" : "oneToOne"
          },
          "scheduled_events_created" : {
            "type" : "integer",
            "description" : "The number of created scheduled events.",
            "example" : 10,
            "x-ballerina-name" : "scheduledEventsCreated"
          },
          "schedules_created" : {
            "type" : "integer",
            "description" : "The number of created schedules.",
            "example" : 10,
            "x-ballerina-name" : "schedulesCreated"
          }
        },
        "description" : "The stats of the last N days.",
        "example" : "\"last_n_days\":{{\"created_scheduled_events\":65},{\"completed_scheduled_events\":34},{\"created_schedules\":20},{\"cancelled_scheduled_events\":14},{\"rescheduled_scheduled_events\":8},{\"cancelled_schedules\":3},{\"one_to_one\":10},{\"any_host_available\":5},{\"one_off_meeting\":2},{\"all_host_available\":1},{\"meeting_poll\":1},{\"one_to_many\":1}}"
      },
      "SchedulerschedulesscheduleIdCustomFields" : {
        "required" : [ "enabled", "format", "include_other", "name", "position", "required" ],
        "type" : "object",
        "properties" : {
          "answer_choices" : {
            "maxItems" : 50,
            "minItems" : 1,
            "type" : "array",
            "description" : "The invitee's option(s) for single_select or multi_select type of responses.",
            "items" : {
              "maxLength" : 8192,
              "minLength" : 1,
              "type" : "string",
              "description" : "The invitee's option for single_select or multi_select type of responses.",
              "example" : "At home"
            },
            "x-ballerina-name" : "answerChoices"
          },
          "format" : {
            "type" : "string",
            "description" : "The type of response that the invitee provides to the custom question. It can be one or multiple lines of text, a phone number, or single- or multiple-select.[`string text phone_number single_select multi_select`]",
            "example" : "text",
            "enum" : [ "text", "string", "phone_number", "choices_one", "choices_many", "select" ]
          },
          "custom_field_id" : {
            "type" : "string",
            "description" : "The ID of this question",
            "example" : "0l6imf50il8jchyapni3p5ckc0",
            "x-ballerina-name" : "customFieldId"
          },
          "name" : {
            "type" : "string",
            "description" : "The custom question that the host created for the event type.",
            "example" : "Please share anything that will help prepare for our meeting."
          },
          "include_other" : {
            "type" : "boolean",
            "description" : "If the custom question lets invitees record a written response, in addition to single-select or multiple-select type of responses, then it's true. Otherwise, it's false.",
            "example" : false,
            "x-ballerina-name" : "includeOther"
          },
          "position" : {
            "type" : "number",
            "description" : "The position of this question.",
            "example" : 0
          },
          "enabled" : {
            "type" : "boolean",
            "description" : "If the question created by the host is turned ON and visible on the event booking page, then it's true. If it's turned OFF and invisible on the event booking page, then it's false.",
            "example" : true
          },
          "required" : {
            "type" : "boolean",
            "description" : "If a response to the question, created by the host, is required for invitees to book the event type, then it's true. If it's not required, it's false.",
            "example" : false
          }
        }
      },
      "SchedulerschedulesSegments" : {
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "The start date and time of the segment.",
            "example" : "2023-12-21T06:00:00Z"
          },
          "end" : {
            "type" : "string",
            "description" : "The end date and time of the segment.",
            "example" : "2023-12-21T06:00:00Z"
          }
        }
      },
      "ScheduleravailabilityavailabilityIdSegments" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "The start date to override.",
            "example" : "2024-01-07T09:00:00Z"
          },
          "end" : {
            "type" : "string",
            "description" : "The end date to override.",
            "example" : "2024-01-08T09:00:00Z"
          }
        },
        "description" : "The date interval that needs to overridden."
      },
      "InlineResponse2001" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "description" : " The token for a later to retrieve only the entries that have changed since this result was returned. It's omitted if further results are available, in which case `nextPageToken` is provided.",
            "example" : "Cj8KLwotCgsI3ujvqgYQgIXUGxIeChwKGjBzNzAyZWVtbjBzOTdlZXFhNXE1NWg4ZWJtGgwIzIPVrAYQwM3WrAPAPgE=",
            "x-ballerina-name" : "nextPageToken"
          },
          "items" : {
            "type" : "array",
            "description" : "array[User Availability Schedule]",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2001Items"
            }
          }
        },
        "description" : "The availability of the schedule query result of given user."
      },
      "InlineResponse2003" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "description" : "The token to access the next page of this result.",
            "example" : "ffffffff97c5b97f_53slvrhet2n0xkxurl5ybgde40",
            "x-ballerina-name" : "nextPageToken"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2003Items"
            }
          }
        }
      },
      "InlineResponse2002" : {
        "type" : "object",
        "properties" : {
          "owner" : {
            "type" : "string",
            "description" : "The owner's ID.",
            "readOnly" : true,
            "example" : "easonfsxsysks3lgchitiw@scheudler.zoom.us"
          },
          "default" : {
            "type" : "boolean",
            "description" : "The default availability schedule in use.",
            "example" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this availability schedule.",
            "example" : "Working hours"
          },
          "availability_id" : {
            "type" : "string",
            "description" : "The unique ID of availability.",
            "example" : "x3h1u4id4liffdyszsp8kpxl80",
            "x-ballerina-name" : "availabilityId"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ScheduleravailabilitySegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The timezone for which this availability schedule originates.",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          }
        },
        "description" : "The availability schedule set by the user."
      },
      "InlineResponse2005" : {
        "type" : "object",
        "properties" : {
          "next_page_token" : {
            "type" : "string",
            "description" : "The token that accesses the next page of this result.",
            "example" : "aec369a4fce6ae655749b00fc7260bfd",
            "x-ballerina-name" : "nextPageToken"
          },
          "items" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2005Items"
            }
          }
        }
      },
      "InlineResponse2004" : {
        "type" : "object",
        "properties" : {
          "summary" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "The event's summary.",
            "example" : "daily meeting"
          },
          "attendees" : {
            "type" : "array",
            "description" : "The attendees of the event.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2004Attendees"
            }
          },
          "meeting_notes" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The meeting notes of the event.",
            "example" : "meeting notes",
            "x-ballerina-name" : "meetingNotes"
          },
          "description" : {
            "maxLength" : 8192,
            "type" : "string",
            "description" : "The event's description.",
            "example" : "15 Minute Meeting"
          },
          "end_date_time" : {
            "type" : "string",
            "description" : "The scheduled event's end date time.",
            "example" : "2023-12-21T16:30:00+08:00",
            "x-ballerina-name" : "endDateTime"
          },
          "event_id" : {
            "type" : "string",
            "description" : "The unique identifier of event.",
            "example" : "woft7torlatbw8ek24bmit5k60",
            "x-ballerina-name" : "eventId"
          },
          "event_type" : {
            "type" : "string",
            "description" : "This field indicates whether the type is default(scheduled) or a pending event.",
            "readOnly" : true,
            "example" : "default",
            "enum" : [ "default", "pending" ],
            "x-ballerina-name" : "eventType"
          },
          "tracking_params" : {
            "type" : "array",
            "description" : "The information to track the source of invitee. Only use this setting you add UTM parameters in schedule links.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2004TrackingParams"
            },
            "x-ballerina-name" : "trackingParams"
          },
          "guests" : {
            "type" : "array",
            "description" : "The guest's collection.",
            "items" : {
              "type" : "string",
              "description" : "The guest's email.",
              "example" : "tom@zoom.us"
            }
          },
          "location" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The information for a custom location.",
            "example" : "AAA office"
          },
          "start_date_time" : {
            "type" : "string",
            "description" : "The scheduled event's start date time.",
            "example" : "2023-12-21T16:00:00+08:00",
            "x-ballerina-name" : "startDateTime"
          },
          "schedule_id" : {
            "type" : "string",
            "description" : "The unique identifier of schedule.",
            "example" : "ygfx661g9x8dwcgeusdqhsplc0_20231220T160000Z",
            "x-ballerina-name" : "scheduleId"
          },
          "updated" : {
            "type" : "string",
            "description" : "The moment the event was updated.",
            "example" : "2023-12-21T06:19:28.309Z"
          },
          "external_location" : {
            "description" : "The meeting details for when users have scheduled appointments.",
            "readOnly" : true,
            "oneOf" : [ {
              "type" : "object",
              "properties" : {
                "kind" : {
                  "type" : "string",
                  "description" : "The type of meeting specified in the schedule.",
                  "example" : "zoom"
                },
                "meeting_id" : {
                  "type" : "string",
                  "description" : "The unique identifier of the meeting in string format.",
                  "example" : "94777886776"
                },
                "personal_meeting_id" : {
                  "type" : "string",
                  "description" : "The personal meeting id in string format.",
                  "example" : "98656786887"
                },
                "meeting_passcode" : {
                  "type" : "string",
                  "description" : "The passcode of Zoom meeting.",
                  "example" : "958000"
                },
                "meeting_description" : {
                  "type" : "string",
                  "description" : "The description of Zoom meeting.",
                  "example" : "Invite you to meeting"
                },
                "meeting_join_url" : {
                  "type" : "string",
                  "description" : "The URL of Zoom meeting",
                  "example" : "https://zoom.us/j/7427752805"
                }
              }
            } ],
            "x-ballerina-name" : "externalLocation"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of event: confirmed or cancelled.",
            "example" : "confirmed",
            "enum" : [ "confirmed", "cancelled" ]
          }
        }
      },
      "InlineResponse2005Items" : {
        "type" : "object",
        "properties" : {
          "end_date" : {
            "type" : "string",
            "description" : "The schedule's end date.",
            "example" : "2023-12-28",
            "x-ballerina-name" : "endDate"
          },
          "color" : {
            "type" : "string",
            "description" : "The hexadecimal color value of the event type's scheduling page.",
            "example" : "#fff200"
          },
          "description" : {
            "maxLength" : 8192,
            "type" : "string",
            "description" : "The schedule's description.",
            "example" : "15 Minute Meeting"
          },
          "secret" : {
            "type" : "boolean",
            "description" : "This field indicates if the event type is hidden on the owner's main scheduling page.",
            "example" : false
          },
          "availability_rules" : {
            "type" : "array",
            "description" : "The availability of the time rule.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2005AvailabilityRules"
            },
            "x-ballerina-name" : "availabilityRules"
          },
          "capacity" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "number",
            "description" : "This field indicates the maximum invitees per event.",
            "example" : 1
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          },
          "duration" : {
            "maximum" : 1440,
            "minimum" : 15,
            "type" : "number",
            "description" : "This field indicates the duration of the meeting in minutes, range: [1, 1440].",
            "example" : 30
          },
          "cushion" : {
            "maximum" : 14340,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field indicates the minimum time before a schedule starts when the attendees can book.",
            "example" : 0
          },
          "buffer" : {
            "$ref" : "#/components/schemas/SchedulerschedulesBuffer"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesscheduleIdSegmentsRecurrence1"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "slug" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string",
            "description" : "The event portion of the event's URL that identifies a specific web page.",
            "example" : "sales"
          },
          "interval_type" : {
            "type" : "string",
            "description" : "The schedule time range. Unlimited means forever and fixed means using `startDate` and `endDate`.",
            "example" : "fixed",
            "enum" : [ "unlimited", "fixed" ],
            "x-ballerina-name" : "intervalType"
          },
          "start_date" : {
            "type" : "string",
            "description" : "The schedule's start date.",
            "example" : "2023-12-21",
            "x-ballerina-name" : "startDate"
          },
          "add_on_type" : {
            "type" : "string",
            "description" : "The method of the type of `addOn`, such as Zoom meeting, Zoom phone, or offline.",
            "example" : "zoomMeeting",
            "enum" : [ "zoomMeeting", "zoomPhone", "offline" ],
            "x-ballerina-name" : "addOnType"
          },
          "scheduling_url" : {
            "type" : "string",
            "description" : "The URL of the user's scheduling site where invitees book this event type.",
            "example" : "https://scheduler.zoom.us/zoom_us/sales",
            "x-ballerina-name" : "schedulingUrl"
          },
          "start_time_increment" : {
            "maximum" : 720,
            "minimum" : 5,
            "type" : "number",
            "description" : "This field sets the frequency of available time slots for invitees.",
            "example" : 30,
            "x-ballerina-name" : "startTimeIncrement"
          },
          "summary" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "The event's summary.",
            "example" : "daily meeting"
          },
          "creator" : {
            "$ref" : "#/components/schemas/InlineResponse2005Creator"
          },
          "schedule_type" : {
            "type" : "string",
            "description" : "This field indicates if the schedule type is \"one\" (belongs to an individual user) or \"multiple\".",
            "example" : "one",
            "enum" : [ "one", "multiple" ],
            "x-ballerina-name" : "scheduleType"
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "This field contains the custom question.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2011CustomFields"
            },
            "x-ballerina-name" : "customFields"
          },
          "active" : {
            "type" : "boolean",
            "description" : "This field indicates if the schedule is active",
            "example" : true
          },
          "booking_limit" : {
            "maximum" : 96,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field sets the maximum events allowed per day.",
            "example" : 0,
            "x-ballerina-name" : "bookingLimit"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "the timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "organizer" : {
            "$ref" : "#/components/schemas/InlineResponse2011Organizer"
          },
          "location" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The information for a custom location.",
            "example" : "AAA office"
          },
          "schedule_id" : {
            "type" : "string",
            "description" : "The unique identifier of the schedule.",
            "example" : "ygfx661g9x8dwcgeusdqhsplc0",
            "x-ballerina-name" : "scheduleId"
          },
          "updated" : {
            "type" : "string",
            "description" : "The moment the schedule type was updated.",
            "readOnly" : true,
            "example" : "2023-12-21T06:18:32.087Z"
          },
          "availability_override" : {
            "type" : "boolean",
            "description" : "This field indicates the use of the availability rule.",
            "example" : false,
            "x-ballerina-name" : "availabilityOverride"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of schedule: confirmed or cancelled.",
            "example" : "confirmed",
            "enum" : [ "confirmed", "cancelled" ]
          }
        }
      },
      "InlineResponse2007" : {
        "type" : "object",
        "properties" : {
          "scheduling_url" : {
            "type" : "string",
            "description" : "The URL of the user’s scheduling site where invitees book this event type.",
            "example" : "https://scheduler.zoom.us/zoom_us",
            "x-ballerina-name" : "schedulingUrl"
          },
          "logo" : {
            "type" : "string",
            "description" : "This field enables users to upload their company's logo on Zoom.",
            "example" : "user logo"
          },
          "display_name" : {
            "type" : "string",
            "description" : "The user's name",
            "example" : "name",
            "x-ballerina-name" : "displayName"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "The time zone to use when presenting time to the user.",
            "example" : "America/New York",
            "x-ballerina-name" : "timeZone"
          },
          "slug" : {
            "type" : "string",
            "description" : "The portion of URL for the user's scheduling page where invitees book sessions that renders in a human-readable format.",
            "example" : "zoom_us"
          },
          "picture" : {
            "type" : "string",
            "description" : "This field enables users to upload their personal avatars on Zoom.",
            "example" : "base64 encoding string"
          }
        },
        "description" : "The user's information."
      },
      "InlineResponse2006" : {
        "type" : "object",
        "properties" : {
          "end_date" : {
            "type" : "string",
            "description" : "The schedule's end date.",
            "example" : "2023-12-28",
            "x-ballerina-name" : "endDate"
          },
          "color" : {
            "type" : "string",
            "description" : "The hexadecimal color value of the event type's scheduling page.",
            "example" : "#fff200"
          },
          "description" : {
            "maxLength" : 8192,
            "type" : "string",
            "description" : "The schedule's description.",
            "example" : "15 Minute Meeting"
          },
          "secret" : {
            "type" : "boolean",
            "description" : "This field indicates if the event type is hidden on the owner's main scheduling page.",
            "example" : false
          },
          "availability_rules" : {
            "type" : "array",
            "description" : "The availability of the time rule.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2006AvailabilityRules"
            },
            "x-ballerina-name" : "availabilityRules"
          },
          "capacity" : {
            "maximum" : 200,
            "minimum" : 1,
            "type" : "number",
            "description" : "This field indicates the maximum invitees per event.",
            "example" : 1
          },
          "segments" : {
            "type" : "array",
            "description" : "The available time segments of the event.",
            "items" : {
              "$ref" : "#/components/schemas/SchedulerschedulesSegments"
            }
          },
          "duration" : {
            "maximum" : 1440,
            "minimum" : 15,
            "type" : "number",
            "description" : "This field indicates the duration of the meeting in minutes, range: [1, 1440].",
            "example" : 30
          },
          "cushion" : {
            "maximum" : 14340,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field indicates the minimum time before a schedule starts when the attendees can book.",
            "example" : 0
          },
          "buffer" : {
            "$ref" : "#/components/schemas/SchedulerschedulesBuffer"
          },
          "segments_recurrence" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/SchedulerschedulesSegmentsRecurrence"
            } ],
            "x-ballerina-name" : "segmentsRecurrence"
          },
          "slug" : {
            "maxLength" : 256,
            "minLength" : 3,
            "type" : "string",
            "description" : "The event portion of the event's URL that identifies a specific web page.",
            "example" : "sales"
          },
          "interval_type" : {
            "type" : "string",
            "description" : "The schedule time range. Unlimited means forever and fixed means using `startDate` and `endDate`.",
            "example" : "fixed",
            "enum" : [ "unlimited", "fixed" ],
            "x-ballerina-name" : "intervalType"
          },
          "start_date" : {
            "type" : "string",
            "description" : "The schedule's start date.",
            "example" : "2023-12-21",
            "x-ballerina-name" : "startDate"
          },
          "add_on_type" : {
            "type" : "string",
            "description" : "The method of the type of `addOn`, such as Zoom meeting, Zoom phone, or offline.",
            "example" : "zoomMeeting",
            "enum" : [ "zoomMeeting", "zoomPhone", "offline" ],
            "x-ballerina-name" : "addOnType"
          },
          "scheduling_url" : {
            "type" : "string",
            "description" : "The URL of the user's scheduling site where invitees book this event type.",
            "example" : "https://scheduler.zoom.us/zoom_us/sales",
            "x-ballerina-name" : "schedulingUrl"
          },
          "start_time_increment" : {
            "maximum" : 720,
            "minimum" : 5,
            "type" : "number",
            "description" : "This field sets the frequency of available time slots for invitees.",
            "example" : 30,
            "x-ballerina-name" : "startTimeIncrement"
          },
          "summary" : {
            "maxLength" : 256,
            "type" : "string",
            "description" : "The event's summary.",
            "example" : "daily meeting"
          },
          "creator" : {
            "$ref" : "#/components/schemas/InlineResponse2011Creator"
          },
          "schedule_type" : {
            "type" : "string",
            "description" : "This field indicates if the schedule type is **one** (belongs to an individual user) or **multiple**.",
            "example" : "one",
            "enum" : [ "one", "multiple" ],
            "x-ballerina-name" : "scheduleType"
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "This field contains the custom question.",
            "items" : {
              "$ref" : "#/components/schemas/InlineResponse2011CustomFields"
            },
            "x-ballerina-name" : "customFields"
          },
          "active" : {
            "type" : "boolean",
            "description" : "This field indicates if the schedule is active.",
            "example" : true
          },
          "booking_limit" : {
            "maximum" : 96,
            "minimum" : 0,
            "type" : "number",
            "description" : "This field sets the maximum events allowed per day.",
            "example" : 0,
            "x-ballerina-name" : "bookingLimit"
          },
          "time_zone" : {
            "type" : "string",
            "description" : "the timezone of this availability rule. ",
            "example" : "Asia/Shanghai",
            "x-ballerina-name" : "timeZone"
          },
          "organizer" : {
            "$ref" : "#/components/schemas/InlineResponse2011Organizer"
          },
          "location" : {
            "maxLength" : 1024,
            "type" : "string",
            "description" : "The information for a custom location.",
            "example" : "AAA office"
          },
          "schedule_id" : {
            "type" : "string",
            "description" : "The unique identifier of a schedule.",
            "example" : "ygfx661g9x8dwcgeusdqhsplc0",
            "x-ballerina-name" : "scheduleId"
          },
          "updated" : {
            "type" : "string",
            "description" : "The moment the schedule type was updated.",
            "readOnly" : true,
            "example" : "2023-12-21T06:18:32.087Z"
          },
          "availability_override" : {
            "type" : "boolean",
            "description" : "This field indicates the use of the availability rule.",
            "example" : false,
            "x-ballerina-name" : "availabilityOverride"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of schedule: confirmed or cancelled.",
            "example" : "confirmed",
            "enum" : [ "confirmed", "cancelled" ]
          }
        }
      }
    },
    "securitySchemes" : {
      "openapi_authorization" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      },
      "openapi_oauth" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "/",
            "tokenUrl" : "",
            "refreshUrl" : "",
            "scopes" : {
              "scheduler:read" : "scheduler:read",
              "scheduler:read:admin" : "scheduler:read:admin",
              "scheduler:read:analytics" : "scheduler:read:analytics",
              "scheduler:read:analytics:admin" : "scheduler:read:analytics:admin",
              "scheduler:read:list_availability" : "scheduler:read:list_availability",
              "scheduler:read:list_availability:admin" : "scheduler:read:list_availability:admin",
              "scheduler:write:admin" : "scheduler:write:admin",
              "scheduler:write" : "scheduler:write",
              "scheduler:write:availability" : "scheduler:write:availability",
              "scheduler:write:availability:admin" : "scheduler:write:availability:admin",
              "scheduler:read:availability" : "scheduler:read:availability",
              "scheduler:read:availability:admin" : "scheduler:read:availability:admin",
              "scheduler:update:availability" : "scheduler:update:availability",
              "scheduler:update:availability:admin" : "scheduler:update:availability:admin",
              "scheduler:delete:availability" : "scheduler:delete:availability",
              "scheduler:delete:availability:admin" : "scheduler:delete:availability:admin",
              "scheduler:read:list_scheduled_events" : "scheduler:read:list_scheduled_events",
              "scheduler:read:list_scheduled_events:admin" : "scheduler:read:list_scheduled_events:admin",
              "scheduler:read:scheduled_event" : "scheduler:read:scheduled_event",
              "scheduler:read:scheduled_event:admin" : "scheduler:read:scheduled_event:admin",
              "scheduler:delete:scheduled_event" : "scheduler:delete:scheduled_event",
              "scheduler:delete:scheduled_event:admin" : "scheduler:delete:scheduled_event:admin",
              "scheduler:update:scheduled_event" : "scheduler:update:scheduled_event",
              "scheduler:update:scheduled_event:admin" : "scheduler:update:scheduled_event:admin",
              "scheduler:read:list_schedule" : "scheduler:read:list_schedule",
              "scheduler:read:list_schedule:admin" : "scheduler:read:list_schedule:admin",
              "scheduler:write:insert_schedule" : "scheduler:write:insert_schedule",
              "scheduler:write:insert_schedule:admin" : "scheduler:write:insert_schedule:admin",
              "scheduler:update:patch_schedule" : "scheduler:update:patch_schedule",
              "scheduler:update:patch_schedule:admin" : "scheduler:update:patch_schedule:admin",
              "scheduler:read:get_schedule" : "scheduler:read:get_schedule",
              "scheduler:read:get_schedule:admin" : "scheduler:read:get_schedule:admin",
              "scheduler:delete:delete_schedule" : "scheduler:delete:delete_schedule",
              "scheduler:delete:delete_schedule:admin" : "scheduler:delete:delete_schedule:admin",
              "scheduler:write:single_use_link" : "scheduler:write:single_use_link",
              "scheduler:write:single_use_link:admin" : "scheduler:write:single_use_link:admin",
              "scheduler:read:user" : "scheduler:read:user",
              "scheduler:read:user:admin" : "scheduler:read:user:admin"
            }
          }
        }
      }
    }
  }
}